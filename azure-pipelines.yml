trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnectionId: 'BillTestServiceConnection'
  webAppName: 'BillTestVmssClient'  
  nodeVersion: '20.x'
  angularCliVersion: '18.x.x' 

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: BuildJob
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '$(nodeVersion)'
            displayName: 'Install Node.js'

        - script: npm install -g @angular/cli@$(angularCliVersion)
          displayName: 'Install Angular CLI'

        - script: |
            npm install
            ng build --configuration production
          displayName: 'Build Angular app'

        - task: ArchiveFiles@2
          displayName: 'Archive files'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/ui-test/browser'
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            replaceExistingArchive: true

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            ArtifactName: 'drop'

- stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentDevelopment
    pool:
      vmImage: 'ubuntu-latest'
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureWebApp@1
            displayName: 'Deploy App Service'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              appType: 'webAppLinux'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|20-lts'